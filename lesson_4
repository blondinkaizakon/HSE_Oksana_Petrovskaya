import json
import csv

path_inn = r"C:\Users\OX\Desktop\LP\traders.txt"
path_json = r"C:\Users\OX\Desktop\LP\traders.json"
path_csv = r"C:\Users\OX\Desktop\LP\traders.csv"

with open(path_inn, 'r', encoding='utf-8') as file:
    inn_list = [line.strip() for line in file if line.strip()]

with open(path_json, 'r', encoding='utf-8') as file:
    data = json.load(file)

filtered_data = []
for org in data:
    if org.get("–ò–ù–ù") in inn_list:
        filtered_data.append({
            "–ò–ù–ù": org.get("–ò–ù–ù", ""),
            "–û–ì–†–ù": org.get("–û–ì–†–ù", ""),
            "–ê–¥—Ä–µ—Å": org.get("–ê–¥—Ä–µ—Å", "")
        })

with open(path_csv, 'w', newline='', encoding='utf-8') as csvfile:
    writer = csv.DictWriter(csvfile, fieldnames=["–ò–ù–ù", "–û–ì–†–ù", "–ê–¥—Ä–µ—Å"])
    writer.writeheader()
    writer.writerows(filtered_data)

print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∏ –∑–∞–ø–∏—Å–∞–Ω–æ {len(filtered_data)} –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –≤ {path_csv}")

import re

text = "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞ info@legalflow.ru –∏–ª–∏ support@company.com –¥–ª—è —Å–≤—è–∑–∏."

emails = re.findall(r'[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+', text)
print(emails)

import json
import re
from collections import defaultdict

# –ü—É—Ç—å –∫ –≤—Ö–æ–¥–Ω–æ–º—É —Ñ–∞–π–ª—É
input_path = r"C:\Users\OX\Desktop\LP\100000_efrsb_messages.json"
output_path = r"C:\Users\OX\Desktop\emails.json"

# –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è email-–∞–¥—Ä–µ—Å–æ–≤
email_pattern = re.compile(r'[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+')

# –†–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∏–π —Å–ª–æ–≤–∞—Ä—å: –ò–ù–ù -> –º–Ω–æ–∂–µ—Å—Ç–≤–æ email-–∞–¥—Ä–µ—Å–æ–≤
emails_by_inn = defaultdict(set)

# –ó–∞–≥—Ä—É–∑–∫–∞ JSON
with open(input_path, "r", encoding="utf-8") as file:
    data = json.load(file)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏
for record in data:
    inn = str(record.get("publisher_inn", "")).strip()
    text = record.get("msg_text", "")
    if inn and text:
        found_emails = email_pattern.findall(text)
        if found_emails:
            emails_by_inn[inn].update(found_emails)

# –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º set –≤ list –¥–ª—è —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏
result = {inn: list(emails) for inn, emails in emails_by_inn.items()}

# –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ JSON
with open(output_path, "w", encoding="utf-8") as f:
    json.dump(result, f, ensure_ascii=False, indent=2)

print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(result)} –ò–ù–ù —Å email-–∞–¥—Ä–µ—Å–∞–º–∏. –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ {output_path}")

import re
import json
import json
import re

# üîπ –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É ICS-—Ñ–∞–π–ª—É
input_path = r"C:\Users\OX\Desktop\LP\RAD_09_04_2024.ics"
output_path = r"C:\Users\OX\Desktop\LP\court_dates1.json"

case_number = "–ê40-183194/2015"
events = []
event = {}
inside_event = False

with open(input_path, "r", encoding="utf-8") as file:
    for line in file:
        line = line.strip()

        if line == "BEGIN:VEVENT":
            inside_event = True
            event = {}
        elif line == "END:VEVENT":
            inside_event = False
            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–±—ã—Ç–∏—è –±–µ–∑ –¥–∞—Ç—ã –∏–ª–∏ –º–µ—Å—Ç–∞
            if event.get("DTSTART", "").startswith("00010101") or "LOCATION" not in event:
                continue

            def parse_dt(value):
                if value.startswith("TZID=UTC+3:"):
                    value = value.replace("TZID=UTC+3:", "")
                if "T" in value:
                    return f"{value[:4]}-{value[4:6]}-{value[6:8]}T{value[9:11]}:{value[11:13]}:00+03:00"
                return ""

            events.append({
                "case_number": case_number,
                "start": parse_dt(event.get("DTSTART", "")),
                "end": parse_dt(event.get("DTEND", "")),
                "location": event.get("LOCATION", "").replace("\\,", ",").replace("\\n", " ").strip(),
                "description": event.get("DESCRIPTION", "").replace("\\n", "\n").replace("\\,", ",").strip()
            })
        elif inside_event and ":" in line:
            key, value = line.split(":", 1)
            key = key.split(";")[0].strip().upper()
            event[key] = value.strip()

# üîπ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ JSON
with open(output_path, "w", encoding="utf-8") as out_file:
    json.dump(events, out_file, ensure_ascii=False, indent=2)

print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(events)} –∑–∞—Å–µ–¥–∞–Ω–∏–π. –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ {output_path}")
